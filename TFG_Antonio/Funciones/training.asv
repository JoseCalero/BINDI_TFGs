
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Entrenando el modelo
% ...trainModels function
% - S: Sample number (The samples come from different or the same window)
% - F: Feature number
% - P: Patient number
% labels is a tridimensional matrix Sx1xP. Must be cell type
% - S: Sample number (The samples come from different or the same window)
% - 1: One column
% - P: Patient number
% Samples and patients must be the same amount
% varargin:
% - database : it specifies the open data based used. Number of patients,
%              trials differ form each other.
%              - 1: DEAP
%              - 2: MAHNOB
%              - 3: WESAD
% - model : it specifies the subject model
%              - 0: Subject-dependent
%              - 1: Subject-independent
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Convertimos nuestros datos a matrices tridimensionales

n = 1;
  
% Fea = features - SxFxP

Fea(:,:,n) = data{1,n}.features(:,1:25);
    
Lab(:,:,1) = data{1,n}.features(:,26:27);

%for n = 1:15
   
    % F = features - SxFxP

%    datos{1,n}.F = data{1,n}.features(:,1:25);
    
%    datos{1,n}.L = data{1,n}.features(:,26:27);
    
%end

result = trainModels(F, , 'database',3,'model',0);
